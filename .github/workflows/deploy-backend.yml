name: Deploy Backend Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - "infra/**"
      - "lambda_function.py"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

jobs:
  terraform_imports:
    name: Import Existing Infra
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    env:
      AWS_REGION:             ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:      ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_route53_zone_id:        ${{ secrets.ROUTE53_ZONE_ID }}
      TF_VAR_frontend_bucket_name:   ${{ secrets.FRONTEND_BUCKET_NAME }}
      TF_VAR_frontend_domain:        ${{ secrets.FRONTEND_DOMAIN }}
      TF_VAR_cloudfront_origin_id:   ${{ secrets.CLOUDFRONT_ORIGIN_ID }}
      TF_VAR_ssl_min_protocol_version: "TLSv1.2_2021"
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false

      - name: Import existing S3 bucket
        working-directory: infra
        run: terraform import aws_s3_bucket.frontend "${{ secrets.FRONTEND_BUCKET_NAME }}"

      - name: Import public access block
        working-directory: infra
        run: terraform import aws_s3_bucket_public_access_block.frontend "${{ secrets.FRONTEND_BUCKET_NAME }}"

      - name: Import CloudFront OAC
        working-directory: infra
        run: terraform import aws_cloudfront_origin_access_control.frontend_oac "${{ secrets.CLOUDFRONT_OAC_ID }}"

      - name: Import CloudFront distribution
        working-directory: infra
        run: terraform import aws_cloudfront_distribution.frontend "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"

      - name: Import S3 bucket policy
        working-directory: infra
        run: terraform import aws_s3_bucket_policy.frontend "${{ secrets.FRONTEND_BUCKET_NAME }}"

      - name: Import Route53 record
        working-directory: infra
        run: terraform import aws_route53_record.frontend_alias "${{ secrets.ROUTE53_ZONE_ID }}_${{ secrets.FRONTEND_DOMAIN }}_A"

  terraform_backend:
    name: Apply Terraform Infra
    needs: [terraform_imports]
    runs-on: ubuntu-latest

    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_route53_zone_id:    ${{ secrets.ROUTE53_ZONE_ID }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false -lock-timeout=2m

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -out=tfplan -input=false -lock-timeout=2m

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
        working-directory: infra
        run: terraform apply -auto-approve -input=false -lock-timeout=2m

      - name: Output API Gateway URL
        if: success()
        working-directory: infra
        run: terraform output -raw api_gateway_url > ../api_url.txt

      - name: Output CloudFront ID
        if: success()
        working-directory: infra
        run: terraform output -raw cloudfront_distribution_id > ../cloudfront_id.txt

      - name: Upload API URL
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: api-url
          path: api_url.txt

      - name: Upload CloudFront ID
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cloudfront-id
          path: cloudfront_id.txt
