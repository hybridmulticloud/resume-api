name: Deploy + Import Frontend Infra

on:
  push:
    branches: [main]
    paths:
      - infra/**
      - lambda_function.py
      - .github/workflows/deploy-backend.yml

jobs:
  deploy_backend:
    name: Apply Terraform Infra
    runs-on: ubuntu-latest
    env:
      # AWS creds + TFC token, from your repoâ€™s Secrets
      AWS_REGION:               ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:        ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:    ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_route53_zone_id:    ${{ secrets.ROUTE53_ZONE_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init & Apply
        working-directory: infra
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false

      - name: Export Frontend IDs
        working-directory: infra
        run: |
          terraform output -raw cloudfront_oac_id       > ../cloudfront_oac_id.txt
          terraform output -raw cloudfront_distribution_id > ../cloudfront_distribution_id.txt
          terraform output -raw route53_zone_id          > ../route53_zone_id.txt
          terraform output -raw api_gateway_url          > ../api_url.txt

      - name: Upload IDs + API URL
        uses: actions/upload-artifact@v4
        with:
          name: infra-outputs
          path: |
            cloudfront_oac_id.txt
            cloudfront_distribution_id.txt
            route53_zone_id.txt
            api_url.txt

  import_frontend:
    name: Import Existing Frontend Resources
    needs: deploy_backend
    runs-on: ubuntu-latest
    env:
      AWS_REGION:               ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:        ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:    ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Download infra-outputs
        uses: actions/download-artifact@v4
        with:
          name: infra-outputs

      - name: Set IDs into environment
        run: |
          echo "CLOUDFRONT_OAC_ID=$(cat cloudfront_oac_id.txt)" >> $GITHUB_ENV
          echo "CLOUDFRONT_DIST_ID=$(cat cloudfront_distribution_id.txt)" >> $GITHUB_ENV
          echo "ROUTE53_ZONE_ID=$(cat route53_zone_id.txt)" >> $GITHUB_ENV
          echo "FRONTEND_BUCKET_NAME=$(basename $(cat api_url.txt) .execute-api.*)" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init (for import)
        working-directory: infra
        run: terraform init -input=false

      - name: Import S3 bucket
        working-directory: infra
        run: terraform import aws_s3_bucket.frontend "${{ env.FRONTEND_BUCKET_NAME }}"

      - name: Import public access block
        working-directory: infra
        run: terraform import aws_s3_bucket_public_access_block.frontend "${{ env.FRONTEND_BUCKET_NAME }}"

      - name: Import CloudFront OAC
        working-directory: infra
        run: terraform import aws_cloudfront_origin_access_control.frontend_oac "${{ env.CLOUDFRONT_OAC_ID }}"

      - name: Import CloudFront distribution
        working-directory: infra
        run: terraform import aws_cloudfront_distribution.frontend "${{ env.CLOUDFRONT_DIST_ID }}"

      - name: Import S3 bucket policy
        working-directory: infra
        run: terraform import aws_s3_bucket_policy.frontend "${{ env.FRONTEND_BUCKET_NAME }}"

      - name: Import Route53 A record
        working-directory: infra
        run: terraform import aws_route53_record.frontend_alias "${{ env.ROUTE53_ZONE_ID }}_${{ env.FRONTEND_BUCKET_NAME }}_A"
