name: Deploy + Import Frontend Infra

on:
  push:
    branches:
      - main
    paths:
      - infra/**
      - lambda_function.py
      - .github/workflows/deploy-backend.yml

jobs:
  deploy_backend:
    name: Apply Terraform Infra
    runs-on: ubuntu-latest
    env:
      AWS_REGION:               ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:        ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:    ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_route53_zone_id:    ${{ secrets.ROUTE53_ZONE_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init & Apply
        working-directory: infra
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false

      - name: Export Frontend IDs
        working-directory: infra
        run: |
          terraform output -raw cloudfront_oac_id         > ../cloudfront_oac_id.txt
          terraform output -raw cloudfront_distribution_id > ../cloudfront_distribution_id.txt
          terraform output -raw route53_zone_id            > ../route53_zone_id.txt
          terraform output -raw frontend_bucket_name       > ../frontend_bucket_name.txt

      - name: Upload IDs
        uses: actions/upload-artifact@v4
        with:
          name: infra-outputs
          path: |
            cloudfront_oac_id.txt
            cloudfront_distribution_id.txt
            route53_zone_id.txt
            frontend_bucket_name.txt

  import_frontend:
    name: Import Existing Frontend Resources
    needs: deploy_backend
    runs-on: ubuntu-latest
    env:
      AWS_REGION:               ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:        ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:    ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Download infra-outputs
        uses: actions/download-artifact@v4
        with:
          name: infra-outputs

      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Terraform Init (for import)
        working-directory: infra
        run: terraform init -input=false

      - name: Import S3 bucket
        working-directory: infra
        run: terraform import aws_s3_bucket.frontend "$(cat frontend_bucket_name.txt)"

      - name: Import public access block
        working-directory: infra
        run: terraform import aws_s3_bucket_public_access_block.frontend "$(cat frontend_bucket_name.txt)"

      - name: Import CloudFront OAC
        working-directory: infra
        run: terraform import aws_cloudfront_origin_access_control.frontend_oac "$(cat cloudfront_oac_id.txt)"

      - name: Import CloudFront distribution
        working-directory: infra
        run: terraform import aws_cloudfront_distribution.frontend "$(cat cloudfront_distribution_id.txt)"

      - name: Import S3 bucket policy
        working-directory: infra
        run: terraform import aws_s3_bucket_policy.frontend "$(cat frontend_bucket_name.txt)"

      - name: Import Route53 A record
        working-directory: infra
        run: terraform import aws_route53_record.frontend_alias "$(cat route53_zone_id.txt)_$(cat frontend_bucket_name.txt)_A"
