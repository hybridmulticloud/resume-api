name: Deploy Monitoring

on:
  push:
    paths:
      - 'monitoring/**'
  workflow_dispatch:

env:
  AWS_REGION:                ${{ secrets.AWS_REGION }}
  AWS_DEFAULT_REGION:        ${{ secrets.AWS_REGION }}
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
  TF_VAR_aws_region:         ${{ secrets.AWS_REGION }}
  TF_VAR_alert_email:        ${{ secrets.ALERT_EMAIL_ADDRESS }}
  TF_VAR_additional_tags:    '{"Environment":"production"}'

  # ← Store just your account‐ID (or canary suffix) as a secret,
  #    then build the full bucket name here
  AWS_ACCOUNT_ID:            ${{ secrets.AWS_ACCOUNT_ID }}
  S3_BUCKET_NAME:            resume-api-${{ env.AWS_ACCOUNT_ID }}-canary-artifacts

  TF_LOG:                    TRACE
  TF_LOG_PATH:               terraform_debug.log

jobs:
  monitoring:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: monitoring

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.MONITORING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MONITORING_AWS_SECRET_ACCESS_KEY }}

      - name: ⚙️ Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: 🔄 Terraform Init
        run: terraform init -upgrade

      - name: 📦 Import existing S3 bucket (one-time)
        run: |
          if aws s3api head-bucket --bucket "${{ env.S3_BUCKET_NAME }}" 2>/dev/null; then
            echo "Bucket exists; importing into Terraform state…"
            terraform import -lock=false aws_s3_bucket.canary_artifacts "${{ env.S3_BUCKET_NAME }}"
          else
            echo "Bucket not found; Terraform will create it."
          fi

      - name: 🔍 Terraform Plan
        run: terraform plan -input=false -no-color

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve -input=false -no-color -lock-timeout=300s

      - name: 🧾 Terraform Output
        run: terraform output || echo "No outputs returned."

      - name: 🐛 Print Debug Log on Failure
        if: failure()
        run: cat terraform_debug.log || echo "No debug log found."
