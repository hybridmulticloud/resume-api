name: Deploy Monitoring

on:
  push:
    paths:
      - 'monitoring/**'
  schedule:
    - cron: '0 * * * *'

jobs:
  monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clean Terraform cache
        run: |
          cd monitoring
          rm -rf .terraform .terraform.lock.hcl

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        working-directory: monitoring
        run: terraform init -upgrade

      - name: Terraform Validate & Plan
        working-directory: monitoring
        run: |
          terraform validate
          terraform plan -out=tfplan \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="rest_api_name=${{ secrets.REST_API_NAME }}" \
            -var="api_stage_name=${{ secrets.API_STAGE_NAME }}" \
            -var="lambda_function_name=${{ secrets.LAMBDA_FN_NAME }}" \
            -var="cloudfront_distribution_id=${{ secrets.CF_DIST_ID }}" \
            -var="site_bucket_name=${{ secrets.SITE_BUCKET }}" \
            -var="alert_email=${{ secrets.ALERT_EMAIL }}" \
            -var="canary_execution_role_arn=${{ secrets.CANARY_ROLE_ARN }}" \
            -var="schedule_expression=${{ secrets.SCHEDULE_EXPR }}" \
            -var="homepage_canary_name=HomepageCanary" \
            -var="api_canary_name=ApiCanary"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: monitoring
        run: terraform apply -auto-approve tfplan
