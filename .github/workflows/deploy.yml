name: Deploy Lambda with Terraform

on:
  push:
    branches: [main]

jobs:
  provision-s3:
    name: Provision S3 Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Apply Terraform (S3 Only)
        run: terraform apply -auto-approve -target=aws_s3_bucket.lambda_bucket

  deploy-lambda:
    name: Deploy Lambda & Infra
    needs: provision-s3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Zip Lambda function
        run: zip lambda_function.zip lambda_function.py

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Get Terraform Output for Bucket
        id: bucket
        run: echo "LAMBDA_BUCKET=$(terraform output -raw lambda_s3_bucket)" >> $GITHUB_ENV

      - name: Upload Lambda to S3
        run: aws s3 cp lambda_function.zip s3://$LAMBDA_BUCKET/lambda_function.zip

      - name: Terraform Apply (Full Infra)
        run: terraform apply -auto-approve
