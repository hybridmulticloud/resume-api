name: Deploy Lambda Application

on:
  push:
    branches:
      - main
    paths:
      - src/lambda_function.py
      - .github/workflows/lambda-deploy.yml
  workflow_dispatch :  {}

jobs:
  build-and-deploy:
    name: Package and Deploy Lambda
    runs-on: ubuntu-latest

    env:
      AWS_REGION:                ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:         ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:     ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_lambda_function_name: UpdateVisitorCount
      TF_VAR_dynamodb_table_name: VisitorCount
      TF_VAR_lambda_s3_key: function.zip
      TF_VAR_lambda_bucket_name: resume-api-lambda-bucket
      TF_VAR_route53_zone_id: ${{ secrets.ROUTE53_ZONE_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Create ZIP
        working-directory: src
        run: zip -r ../function.zip lambda_function.py

      - name: Export bucket name to shell
        run: echo "lambda_bucket_name=$TF_VAR_lambda_bucket_name" >> $GITHUB_ENV

      - name: Upload ZIP to S3
        run: |
          aws s3 cp function.zip s3://$lambda_bucket_name/function.zip

      - name: Compute SHA256 Hash
        id: zip
        run: |
          HASH=$(openssl dgst -sha256 -binary function.zip | openssl base64)
          echo "ZIP_HASH=$HASH" >> $GITHUB_ENV
          echo "zip_hash=$HASH" >> $GITHUB_OUTPUT

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: Terraform Apply
        working-directory: infra
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false \
            -var="lambda_zip_hash=${{ steps.zip.outputs.zip_hash }}"
